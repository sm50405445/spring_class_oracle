<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<bean id="BoardService" class="com.spring.biz.board.impl.BoardServiceImpl"></bean>
	<context:component-scan base-package="com.spring.biz"></context:component-scan>
	
	<aop:aspectj-autoproxy>
		
	</aop:aspectj-autoproxy>
	<!-- <bean id="UserDAO" class="com.spring.biz.user.impl.UserDAO">	
	</bean>
	
	<bean id="UserService" class="com.spring.biz.user.impl.UserServiceImpl">
		<property name="userDAO" ref="UserDAO"></property>
	</bean> -->
	
	
	<!-- <bean id="log" class="com.spring.biz.common.LogAdvice"></bean>
		
		<aop:config>
		
			<aop:pointcut 
			expression=
			"execution(* com.spring.biz..*Impl.*(..))" 
			id="allPointcut"/>
			
			
			<aop:aspect ref="log">
				<aop:before method="printLog" pointcut-ref="allPointcut"/>
			</aop:aspect>
			
		</aop:config> -->
	
	<!-- <bean id="log" class="com.spring.biz.common.LogAdvice"></bean>
	
	<aop:config>
		<aop:pointcut 
			expression=
			"execution(* com.spring.biz..*Impl.*(..))" 
			id="getPointcut"/>
			
			<aop:aspect ref="log">
				<aop:after method="printLog" pointcut-ref="getPointcut"/>
				
			</aop:aspect>
	</aop:config> -->
	
	<!-- <bean id="before" class="com.spring.biz.common.BeforeAdvice"></bean>
	
	<aop:config>
		<aop:pointcut expression=
		"execution(* com.spring.biz..*Impl.*(..))" 
		id="beforePointcut"/>
		
		<aop:aspect ref="before">
			<aop:before method="beforeLog" pointcut-ref="beforePointcut"/>
		</aop:aspect>
	</aop:config> -->
	
	<!-- <bean id="afterReturning" class="com.spring.biz.common.AfterReturningAdvice"></bean>
	
	<aop:config>
		<aop:pointcut expression=
		"execution(* com.spring.biz..*Impl.*(..))"
		id="AfterReturning"/>
		
		<aop:aspect ref="afterReturning">
			<aop:after-returning method="afterLog" pointcut-ref="afterReturning" returning="returnObj"/>
		</aop:aspect>
	</aop:config> -->
	
	<bean id="afterThrowing" class="com.spring.biz.common.AfterThrowingAdvice"></bean>
	<aop:config>
		<aop:pointcut expression=
		"execution(* com.spring.biz..*Impl.*(..))" 
		id="AfterThrowing"/>
		
		<aop:aspect ref="afterThrowing">
			<aop:after-throwing method="exceptionLog" pointcut-ref="AfterThrowing" throwing="exceptObj"/>
		</aop:aspect>
	</aop:config>
	
	<!-- <bean id="afterAdvice" class="com.spring.biz.common.AfterAdvice"></bean>
	<aop:config>
		<aop:pointcut expression=
		"execution(* com.spring.biz..*Impl.*(..))" 
		id="AfterAdvice"/>
		
		<aop:aspect ref="afterAdvice">
			<aop:after method="finallyLog" pointcut-ref="AfterAdvice"/>
		</aop:aspect>
	</aop:config> -->
	
	<!-- <bean id="AroundAdvice" class="com.spring.biz.common.AroundAdvice"></bean>
	
	<aop:config>
		<aop:pointcut expression=
		"execution(* com.spring.biz..*Impl.*(..))" 
		id="allPointcut"/>
		<aop:aspect ref="AroundAdvice">
			<aop:around method="aroundLog" pointcut-ref="allPointcut"/>
		</aop:aspect>
	</aop:config> -->
	
	<context:property-placeholder 
	location="classpath:config/database.properties"/>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	<!-- spring jdbc 설정 -->
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- transaction 설정 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
		
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes><tx:method name="*" read-only="true"/></tx:attributes>
		<!-- <tx:attributes><tx:method name="get*" read-only="true"/></tx:attributes> get들어간 메서드 읽기방식으로만-->
	</tx:advice>
	<aop:config>
		<aop:pointcut expression=
		"execution(* com.spring.biz..*(..))" 
		id="txPointCut"/>
		
		<aop:advisor pointcut-ref="txPointCut" advice-ref="txAdvice"/>
	</aop:config>
	
</beans>
